-------------------------简单查询----------------------------
1.查询select，用于从数据库表中获取简单的数据
2.语法格式
  select 显示列名1，显示列名2，显示列名3，....显示列名n from 表名；
3.注意：
  1.显示列名默认与表中的字段名一样
  2.显示列可以直接进行数学计算但要求这个字段的类型必须是数字型
  3.如果想获取所有的列可以使用*号，但是不推荐这么做，因为查询速度会降低
    尽可能的需要哪些列就获取哪些列  <---***--->

4.练习01：
  查询所有订单的编号：
  select order_num from orders；
  查询所有订单编号（order_num）及以及金额（order_money）：
  select order_num,order_money from orders;
  查询所有订单的所有数据(*表示全部的列)：
  select * from orders;
  查询所有订单的编号以及金额乘以12份的金额：
  select order_num,order_money*12 from orders;


5.显示列设置别名
  语法格式
    显示列名 as 别名
    或
    显示列名 别名
    注意：1.如果别名包含特殊字符如空格或汉字等等，必须要在别名上添加''， 例如： 显示列名 as '别名'  <---***--->

6.练习02 
  查询所有订单的编号以及金额乘以12份的金额，为后者添加别名：
  select order_num,order_money*12 as totalMoney from orders;


 -------------------------条件查询----------------------------
1.根据特定的条件获取数据库表中的数据
     例如：获取已经结算（order_status（该字段表示订单的结算状态）:0表示未计算1表示已经结算）了的订单

2.语法格式：
  select 显示列 from 表名 where 字段名 简单运算符 数据；
  注意：
    （1）简单运算符包括：= < <= > >= !=
    （2）数据库中所有的关键字不区分大小写，包括表名，字段名，库名；但是数据是区分大小写的,例如a和A，
         可在mysql中数据也不区分大小写。  <---***--->
     (3) 在数据库中数字可以使用< <= > >=，字符串以可以使用，字符串会按照字典顺序排列大小  <---***--->
     (4) 如果数据为非数字型则需要添加单引号'',例如字符串和日期格式  <---***--->


3.练习03
  获取所有已经支付了的订单：
  select * from orders where order_status='1';
  获取所有订单金额（order_money）大于100的订单
  select * from orders where order_money>=100;
  获取所有不是部门（dept）中的所有员工
  select * from dept where deptno!=20;

4.btween...and...运算符获取某个区间范围内 的数据
  语法格式：
    字段名 between 开始值 and 结束值
    1.只能应用于数字字段
    2.它是包含开始值和结束值  <---***--->

5.练习04 
  获取金额在100到500之间的订单
  select * from orders where order_money between 100 and 500;

6.is null获取列为空的数据
  语法格式：
    字段名 is null
  注意：1.如果需要获取某个列为null的数据时不能使用字段名=null 或 字段名='null'  <---***--->
        2.is null只能获取数据本身为null，但不能获取数据内容为null的数据  <---***--->
	String str=null；---> 数据本身为空  <---***--->
        String str1="null"；---> 数据内容为空  <---***--->

7.练习05
  获取没有订单备注的订单
  SELECT * FROM orders WHERE remark IS NULL
  获取公司中的最高领导（没有上级）
  select * from emp where mgr is null；

8.and和or运算符
  and要求两侧的条件都为真这条数据才会被获取，and相当于java中的&&
  or要求两侧的条件有一个为真数据就会被获取，相当于java中的||
  语法格式：
          字段名 =数据 and 字段名 =数据  .......
	  字段名 =数据 or 字段名 =数据   .......
  注意：由于and的优先级要比or高，实际应用中可根据业务的逻辑适当的添加（）以提升优先级  <---***--->

9.练习06
  获取订单金额大于100并且小于等于500的订单
  select * from orders where order_money >100 and order_money <=500;
  获取职位是办事员（clerk）或者职位是销售员（salesman）的所有员工
  select * from emp where job='clerk' or job='salesman'
  获取部门20和部门30中的所有办事员（clerk）
  select * from emp dept=20 and job='clerk' or dept=30 and job='clerk'
  下面这条语句错误的：由于and的优先级要比or的高，所以sql语句会先执行and获取出部门30中的办事员及部门20中的所有员工
  select * from emp where dept=20 or dept=30 and job='clerk'
  正确的：提升or的优先级
  select * from emp where （dept=20 or dept=30） and job='clerk'

10.in运算符：获取所有包含在某个范围内的所有数据
   语法格式：
    字段名 in （数据1，数据2，...数据n）
   注意：
   1.in的底层业务逻辑规则与or是相同的  <---***--->
   2.由于or的运算速度比较慢，因此在实际应用中应尽量去避免or和in的使用  <---***--->

11.练习07 
    获取职位是办事员（clerk）或者职位是销售员（salesman）的所有员工
    select * from emp where job in ('clerk','salesman');

12.not运算符：表示取反的意思必须配合 is null 或 in 一起使用才有效  <---***--->
   not in：表示不包含在某个范围内容
     语法格式：字段名 in （数据1，数据2，...数据n）
     注意：not in的底层业务逻辑规则与and是相同的  <---***--->
   is not null 表示不为空的
     语法格式：字段名 is not null

13.练习08   
   获取职位不是办事员（clerk）或者职位不是销售员（salesman）的所有员工
   select * from emp where job not in ('clerk','salesman');
   获取所有有备注的订单
   select * from orders where remark is not null;





     
